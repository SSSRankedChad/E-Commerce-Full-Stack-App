{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst axios = require('axios');\nexport const getProductById = createAsyncThunk('/products/getProductById}', async (productId, {\n  reject\n}) => {\n  try {\n    const response = await axios.get('/products/{productId}');\n    return response.data;\n  } catch (err) {\n    return reject(err.response.data);\n  }\n});\nexport const loadProducts = createAsyncThunk('/products/loadProducts', async ({\n  reject\n}) => {\n  try {\n    const response = await axios.get('/products');\n    return response.data;\n  } catch (err) {\n    return reject(err.response.data);\n  }\n});\nconst initialState = {\n  product: {},\n  products: [],\n  productId: null,\n  productPending: false,\n  productLoadSuccess: false,\n  productLoadError: false,\n  productsPending: false,\n  productsLoadSuccess: false,\n  productsLoadError: false,\n  searchTerm: false\n};\nconst productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    setProductId: state => {\n      state.productId = action.payload;\n      return state;\n    },\n    clearProduct: state => {\n      state.productId = null;\n      state.products = [];\n      return state;\n    },\n    setSearchTerm: state => {\n      state.searchTerm = action.payload;\n      return state;\n    },\n    clearProdStatusUpdates: state => {\n      state.productPending = false;\n      state.productLoadError = false;\n      state.productsPending = false;\n      state.productsLoadError = false;\n      return state;\n    },\n    [getProductById.pending]: (state, action) => {\n      state.productPending = true;\n      state.productLoadError = false;\n    },\n    [getProductById.fulfilled]: (state, action) => {\n      state.productLoadSuccess = true;\n      state.productLoadError = false;\n      state.product = action.payload;\n    },\n    [getProductById.rejected]: (state, action) => {\n      state.productPending = false;\n      state.productLoadError = action.payload;\n    },\n    [loadProducts.pending]: (state, action) => {\n      state.productsPending = true;\n      state.productsLoadError = false;\n    },\n    [loadProducts.fulfilled]: (state, action) => {\n      state.productsLoadSuccess = true;\n      state.productsLoadError = false;\n      state.products = action.payload;\n    },\n    [loadProducts.rejected]: (state, action) => {\n      state.productsPending = false;\n      state.productsLoadError = action.payload;\n    }\n  }\n});\nexport default productSlice.reducer;\nexport const {\n  setProductId,\n  clearProduct,\n  clearProdStatusUpdates\n} = productSlice.actions;\nconst selectSearchTerm = state => state.products.searchTerm;\nexport const selectProductId = state => state.product.productId;\nexport const selectProduct = state => state.product.product;\nexport const selectProducts = state => state.product.products;\nexport const selectProductPending = state => state.product.productPending;\nexport const selectProductPendError = state => state.product.productLoadError;\nexport const selectProductLoadSuccess = state => state.product.productLoadSuccess;\nexport const selectProductsPending = state => state.product.productsPending;\nexport const selectProductsLoadError = state => state.product.productsLoadError;\nexport const selectFilteredProducts = state => {\n  const searchTerm = selectSearchTerm;\n  let products = selectProducts(state);\n  if (searchTerm) {\n    products = products.filter(product => product.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n  return products;\n};","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","require","getProductById","productId","reject","response","get","data","err","loadProducts","initialState","product","products","productPending","productLoadSuccess","productLoadError","productsPending","productsLoadSuccess","productsLoadError","searchTerm","productSlice","name","reducers","setProductId","state","action","payload","clearProduct","setSearchTerm","clearProdStatusUpdates","pending","fulfilled","rejected","reducer","actions","selectSearchTerm","selectProductId","selectProduct","selectProducts","selectProductPending","selectProductPendError","selectProductLoadSuccess","selectProductsPending","selectProductsLoadError","selectFilteredProducts","filter","toLowerCase","includes"],"sources":["/home/nuwhales/project/e_commerce_app/frontend/src/src/store/Product/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst axios = require('axios');\n\nexport const getProductById = createAsyncThunk('/products/getProductById}', async(productId, {reject}) => {\n  try {\n   const response = await axios.get('/products/{productId}');\n   return response.data;\n  } catch(err) {\n    return reject(err.response.data);\n  }\n});\n\n\n\nexport const loadProducts = createAsyncThunk('/products/loadProducts', async({reject}) => {\n  try {\n   const response = await axios.get('/products');\n   return response.data;\n  } catch(err) {\n    return reject(err.response.data);\n  }\n });\n\nconst initialState = {\n  product: {},\n  products: [],\n  productId: null,\n  productPending: false,\n  productLoadSuccess: false,\n  productLoadError: false,\n  productsPending: false,\n  productsLoadSuccess: false,\n  productsLoadError: false,\n  searchTerm: false\n};\n\nconst productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    setProductId: (state) => {\n      state.productId = action.payload;\n      return state;\n    },\n    clearProduct: (state) => {\n      state.productId = null;\n      state.products = [];\n      return state;\n    },\n\n    setSearchTerm: (state) => {\n      state.searchTerm = action.payload;\n      return state;\n    },\n\n    clearProdStatusUpdates: (state) => {\n      state.productPending = false;\n      state.productLoadError = false;\n      state.productsPending = false;\n      state.productsLoadError = false;\n      return state;\n    },\n      [getProductById.pending]: (state, action) => {\n        state.productPending = true;\n        state.productLoadError = false;\n      },\n      [getProductById.fulfilled]: (state, action) => {\n        state.productLoadSuccess = true;\n        state.productLoadError = false;\n        state.product = action.payload;\n      },\n      [getProductById.rejected]: (state, action) => {\n        state.productPending = false;\n        state.productLoadError = action.payload;\n      },\n      [loadProducts.pending]: (state, action) => {\n        state.productsPending = true;\n        state.productsLoadError = false;\n      },\n      [loadProducts.fulfilled]: (state, action) => {\n        state.productsLoadSuccess = true;\n        state.productsLoadError = false;\n        state.products = action.payload;\n      },\n      [loadProducts.rejected]: (state, action) => {\n        state.productsPending = false;\n        state.productsLoadError = action.payload;\n      },\n    }\n});\n\nexport default productSlice.reducer;\nexport const {setProductId, clearProduct, clearProdStatusUpdates} = productSlice.actions;\nconst selectSearchTerm = (state) => state.products.searchTerm;\n\nexport const selectProductId = state => state.product.productId;\nexport const selectProduct = state => state.product.product;\nexport const selectProducts = state => state.product.products;\nexport const selectProductPending = state => state.product.productPending;\nexport const selectProductPendError = state => state.product.productLoadError;\nexport const selectProductLoadSuccess = state => state.product.productLoadSuccess;\nexport const selectProductsPending = state => state.product.productsPending;\nexport const selectProductsLoadError = state => state.product.productsLoadError;\n\n\nexport const selectFilteredProducts = state => {\n  const searchTerm = selectSearchTerm;\n  let products = selectProducts(state);\n  if(searchTerm) {\n    products = products.filter(product => product.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n  return products;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}