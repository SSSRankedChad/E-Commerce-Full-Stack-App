{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { findProductById, findProducts } from '../../../apis/products.js';\nconst axios = require('axios');\nexport const getProductById = createAsyncThunk('/products/getProductById}', async (param, thunkAPI) => {\n  try {\n    const response = await findProductById();\n    return response.data;\n  } catch (err) {\n    throw err.response.data;\n  }\n});\nexport const loadProducts = createAsyncThunk('/products/loadProducts', async (param, thunkAPI) => {\n  try {\n    const response = await findProducts();\n    return response.data;\n  } catch (err) {\n    return reject(err.response.data);\n  }\n});\nconst initialState = {\n  product: {},\n  products: [],\n  productId: null,\n  productPending: false,\n  productLoadSuccess: false,\n  productLoadError: false,\n  productsPending: false,\n  productsLoadSuccess: false,\n  productsLoadError: false,\n  searchTerm: null\n};\nconst productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    setProductId: state => {\n      state.productId = action.payload;\n      return state;\n    },\n    clearProduct: state => {\n      state.productId = null;\n      state.products = [];\n      return state;\n    },\n    setSearchTerm: state => {\n      state.searchTerm = action.payload;\n      return state;\n    },\n    clearProdStatusUpdates: state => {\n      state.productPending = false;\n      state.productLoadError = false;\n      state.productsPending = false;\n      state.productsLoadError = false;\n      return state;\n    },\n    [getProductById.pending]: (state, action) => {\n      state.productPending = true;\n      state.productLoadError = false;\n    },\n    [getProductById.fulfilled]: (state, action) => {\n      state.productLoadSuccess = true;\n      state.productLoadError = false;\n      state.product = action.payload;\n    },\n    [getProductById.rejected]: (state, action) => {\n      state.productPending = false;\n      state.productLoadError = action.payload;\n    },\n    [loadProducts.pending]: (state, action) => {\n      state.productsPending = true;\n      state.productsLoadError = false;\n    },\n    [loadProducts.fulfilled]: (state, action) => {\n      state.productsLoadSuccess = true;\n      state.productsLoadError = false;\n      state.products = action.payload;\n    },\n    [loadProducts.rejected]: (state, action) => {\n      state.productsPending = false;\n      state.productsLoadError = action.payload;\n    }\n  }\n});\nexport default productSlice.reducer;\nexport const {\n  setProductId,\n  clearProduct,\n  clearProdStatusUpdates\n} = productSlice.actions;\nexport const selectSearchTerm = state => state.product.searchTerm;\nexport const selectProductId = state => state.product.productId;\nexport const selectProduct = state => state.product.product;\nexport const selectProducts = state => state.product.products;\nexport const selectProductPending = state => state.product.productPending;\nexport const selectProductPendError = state => state.product.productLoadError;\nexport const selectProductLoadSuccess = state => state.product.productLoadSuccess;\nexport const selectProductsPending = state => state.product.productsPending;\nexport const selectProductsLoadError = state => state.product.productsLoadError;\nexport const selectFilteredProducts = state => {\n  const searchTerm = selectSearchTerm;\n  let products = selectProducts(state);\n  if (searchTerm) {\n    products = products.filter(product => product.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n  return product;\n};","map":{"version":3,"names":["createSlice","createAsyncThunk","findProductById","findProducts","axios","require","getProductById","param","thunkAPI","response","data","err","loadProducts","reject","initialState","product","products","productId","productPending","productLoadSuccess","productLoadError","productsPending","productsLoadSuccess","productsLoadError","searchTerm","productSlice","name","reducers","setProductId","state","action","payload","clearProduct","setSearchTerm","clearProdStatusUpdates","pending","fulfilled","rejected","reducer","actions","selectSearchTerm","selectProductId","selectProduct","selectProducts","selectProductPending","selectProductPendError","selectProductLoadSuccess","selectProductsPending","selectProductsLoadError","selectFilteredProducts","filter","toLowerCase","includes"],"sources":["/home/nuwhales/E-Commerce-Full-Stack-App/frontend/src/store/Product/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { findProductById, findProducts } from '../../../apis/products.js';\nconst axios = require('axios');\n\nexport const getProductById = createAsyncThunk('/products/getProductById}', async(param, thunkAPI) => {\n  try {\n    const response = await findProductById();\n    return response.data;\n  } catch(err) {\n    throw err.response.data;\n  }\n});\n\n\n\nexport const loadProducts = createAsyncThunk('/products/loadProducts', async(param, thunkAPI) => {\n  try {\n    const response = await findProducts();\n   return response.data;\n  } catch(err) {\n    return reject(err.response.data);\n  }\n });\n\nconst initialState = {\n  product: {},\n  products: [],\n  productId: null,\n  productPending: false,\n  productLoadSuccess: false,\n  productLoadError: false,\n  productsPending: false,\n  productsLoadSuccess: false,\n  productsLoadError: false,\n  searchTerm: null,\n};\n\nconst productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    setProductId: (state) => {\n      state.productId = action.payload;\n      return state;\n    },\n    clearProduct: (state) => {\n      state.productId = null;\n      state.products = [];\n      return state;\n    },\n\n    setSearchTerm: (state) => {\n      state.searchTerm = action.payload;\n      return state;\n    },\n\n    clearProdStatusUpdates: (state) => {\n      state.productPending = false;\n      state.productLoadError = false;\n      state.productsPending = false;\n      state.productsLoadError = false;\n      return state;\n    },\n      [getProductById.pending]: (state, action) => {\n        state.productPending = true;\n        state.productLoadError = false;\n      },\n      [getProductById.fulfilled]: (state, action) => {\n        state.productLoadSuccess = true;\n        state.productLoadError = false;\n        state.product = action.payload;\n      },\n      [getProductById.rejected]: (state, action) => {\n        state.productPending = false;\n        state.productLoadError = action.payload;\n      },\n      [loadProducts.pending]: (state, action) => {\n        state.productsPending = true;\n        state.productsLoadError = false;\n      },\n      [loadProducts.fulfilled]: (state, action) => {\n        state.productsLoadSuccess = true;\n        state.productsLoadError = false;\n        state.products = action.payload;\n      },\n      [loadProducts.rejected]: (state, action) => {\n        state.productsPending = false;\n        state.productsLoadError = action.payload;\n      },\n    }\n});\n\nexport default productSlice.reducer;\nexport const {setProductId, clearProduct, clearProdStatusUpdates} = productSlice.actions;\nexport const selectSearchTerm = (state) => state.product.searchTerm;\n\nexport const selectProductId = state => state.product.productId;\nexport const selectProduct = state => state.product.product;\nexport const selectProducts = state => state.product.products;\nexport const selectProductPending = state => state.product.productPending;\nexport const selectProductPendError = state => state.product.productLoadError;\nexport const selectProductLoadSuccess = state => state.product.productLoadSuccess;\nexport const selectProductsPending = state => state.product.productsPending;\nexport const selectProductsLoadError = state => state.product.productsLoadError;\n\n\nexport const selectFilteredProducts = state => {\n  const searchTerm = selectSearchTerm;\n  let products = selectProducts(state);\n  if(searchTerm) {\n    products = products.filter(product => product.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n  return product;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}